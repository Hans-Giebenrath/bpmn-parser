name: Rust

on:
  push:
    branches: [ "main", "workflow" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set custom APT sources
      run: |
        sudo mv /etc/apt/sources.list /etc/apt/sources.list.backup

        echo "deb http://security.ubuntu.com/ubuntu noble-security main" | sudo tee /etc/apt/sources.list
        echo "deb http://ee.archive.ubuntu.com/ubuntu noble main" | sudo tee -a /etc/apt/sources.list
        echo "deb http://ee.archive.ubuntu.com/ubuntu noble-updates main" | sudo tee -a /etc/apt/sources.list
        echo "deb http://ee.archive.ubuntu.com/ubuntu noble-backports main" | sudo tee -a /etc/apt/sources.list
        echo "deb https://packages.microsoft.com/repos/code stable main" | sudo tee -a /etc/apt/sources.list
        echo "deb https://ppa.launchpadcontent.net/oibaf/graphics-drivers/ubuntu noble main" | sudo tee -a /etc/apt/sources.list

        sudo apt-get update

    - name: Setup CBC
      run: |
        sudo apt-get install coinor-cbc coinor-libcbc-dev

    - name: Setup GCC
      run: |
        sudo apt-get install g++

    - name: Setup Build Essentials
      run: |
        sudo apt-get install build-essential libstdc++-10-dev

    - name: Setup Pkg-config
      run: |
        sudo apt-get install pkg-config

    - name: Run ldconfig
      run: |
        sudo ldconfig

    # - name: Add cbc to cargo.toml
    #   run: |
    #     echo 'cbc-src = "0.2.8"' >> Cargo.toml

    - name: Release
      run: |
        export RUSTFLAGS="-C link-arg=-lstdc++"
        cargo build --release

    - name: Upload release
      uses: actions/upload-artifact@v4
      with:
        name: release
        path: target/release
