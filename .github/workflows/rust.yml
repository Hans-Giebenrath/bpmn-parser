name: Rust

on:
  push:
    branches: [ "main", "workflow" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup CBC
      run: |
        sudo apt-get update
        sudo apt-get install coinor-cbc coinor-libcbc-dev

    - name: Setup GCC
      run: |
        sudo apt-get install g++

    - name: Setup Build Essentials
      run: |
        sudo apt-get install build-essential libstdc++-10-dev

    - name: Setup Pkg-config
      run: |
        sudo apt-get install pkg-config

    - name: Run ldconfig
      run: |
        sudo ldconfig

    - name: Check CBC library installation
      run: |
        ls -l /lib/x86_64-linux-gnu/libCbcSolver.so*

    - name: Ensure correct symbolic link
      run: |
        if [ -f /lib/x86_64-linux-gnu/libCbcSolver.so.3.1 ]; then
          sudo ln -sf /lib/x86_64-linux-gnu/libCbcSolver.so.3.1 /lib/x86_64-linux-gnu/libCbcSolver.so.3
        fi


    # - name: Add cbc to cargo.toml
    #   run: |
    #     echo 'cbc-src = "0.2.8"' >> Cargo.toml

    - name: Release
      run: |
        export RUSTFLAGS="-C link-arg=-lstdc++"
        cargo build --release

    - name: Upload release
      uses: actions/upload-artifact@v4
      with:
        name: release
        path: target/release
